// <auto-generated />
using System;
using DataLayer.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DataLayer.Migrations
{
    [DbContext(typeof(PatientManagerContext))]
    [Migration("20250121174709_FirstDatabase")]
    partial class FirstDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DataLayer.Models.Diagnosis", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id_diagnosis");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateOnly>("End")
                        .HasColumnType("date")
                        .HasColumnName("end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<DateOnly>("Start")
                        .HasColumnType("date")
                        .HasColumnName("start");

                    b.Property<long?>("patient_id")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("patient_id");

                    b.ToTable("Diagnoses");
                });

            modelBuilder.Entity("DataLayer.Models.Examination", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id_examination");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date");

                    b.Property<byte[]>("Image")
                        .HasColumnType("bytea");

                    b.Property<long?>("patient_id")
                        .HasColumnType("bigint");

                    b.Property<long?>("type_id")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("patient_id");

                    b.HasIndex("type_id");

                    b.ToTable("Examinations");
                });

            modelBuilder.Entity("DataLayer.Models.ExaminationType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id_examination_type");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("ExaminationTypes");
                });

            modelBuilder.Entity("DataLayer.Models.Gender", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<char>("Sex")
                        .HasColumnType("character(1)")
                        .HasColumnName("sex");

                    b.HasKey("Id");

                    b.ToTable("Gender");
                });

            modelBuilder.Entity("DataLayer.Models.Patient", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id_patient");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("FirstName")
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.Property<string>("Oib")
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("oib");

                    b.Property<long?>("sex_id")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("sex_id");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("DataLayer.Models.Diagnosis", b =>
                {
                    b.HasOne("DataLayer.Models.Patient", "Patient")
                        .WithMany("MedicalHistory")
                        .HasForeignKey("patient_id");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("DataLayer.Models.Examination", b =>
                {
                    b.HasOne("DataLayer.Models.Patient", "Patient")
                        .WithMany("Examinations")
                        .HasForeignKey("patient_id");

                    b.HasOne("DataLayer.Models.ExaminationType", "Type")
                        .WithMany()
                        .HasForeignKey("type_id");

                    b.Navigation("Patient");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("DataLayer.Models.Patient", b =>
                {
                    b.HasOne("DataLayer.Models.Gender", "Sex")
                        .WithMany()
                        .HasForeignKey("sex_id");

                    b.Navigation("Sex");
                });

            modelBuilder.Entity("DataLayer.Models.Patient", b =>
                {
                    b.Navigation("Examinations");

                    b.Navigation("MedicalHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
